#define SWITCH_PIN 4  // GPIO4 (D2)
#define RELAY_PIN 13  // GPIO13 (D7)

bool lastSwitchState = HIGH;  // Assume the switch is not pressed initially
bool relayTriggered = false;

void setup() {
  Serial.begin(115200);
  pinMode(SWITCH_PIN, INPUT_PULLUP);  // Using internal pull-up resistor for the switch
  pinMode(RELAY_PIN, OUTPUT);         // Set relay pin as output
  digitalWrite(RELAY_PIN, HIGH);      // Ensure the relay is off initially (active-low relay)
}

void loop() {
  bool currentSwitchState = digitalRead(SWITCH_PIN);  // Read the switch state

  // Detect if the switch is pressed and was not pressed before
  if (currentSwitchState == LOW && lastSwitchState == HIGH && !relayTriggered) {
    Serial.println("Switch pressed, turning on relay.");
    digitalWrite(RELAY_PIN, LOW);    // Turn on the relay (active-low)
    delay(150);                      // Delay for debounce or relay on-time
    digitalWrite(RELAY_PIN, HIGH);   // Turn off the relay (active-low)
    relayTriggered = true;           // Mark relay as triggered
  }

  // Reset the trigger when the switch is released
  if (currentSwitchState == HIGH && lastSwitchState == LOW) {
    Serial.println("Switch released, ready to trigger again.");
    relayTriggered = false;  // Reset the trigger when the switch is released
  }

  lastSwitchState = currentSwitchState;  // Update the last switch state
  delay(50);  // Small delay for debouncing
}
